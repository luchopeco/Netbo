@model Entidades.EF.socio

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Master.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="page-title">
            <div class="title_left">
                <h3>Agregando Socio</h3>
            </div>

            <div class="title_right">
                    <div class="col-md-12 col-sm-12 col-xs-12 form-group pull-right top_search">
                      <small class="text-danger"> Desde aqui se agrega un nuevo socio. No es obligatoria la tarjeta.
                        En caso de indicar un numero de tarjeta, se valida que esta exista y no este activada en otro usuario.
                        En caso de que la tarjeta no exista se agrega junto con el usuario</small>
                    </div>
                </div>
        </div>
    </div>
</div>
@if (ViewBag.MsjError != null)
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-danger alert-dismissible fade in" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <strong>@ViewBag.MsjError</strong>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <div class="x_panel">
            <div class="x_title">Nuevo Socio</div>
            <div class="x_content">
                <div class="row">
                    <div class="col-md-12">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                <div class="col-md-6">
                                    Nro Tarjeta <small class="text-danger">No obligatorio</small>
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon">
                                            <i class="fa fa-credit-card" aria-hidden="true"></i>
                                        </span>
                                        @Html.EditorFor(model => model.NroTarjeta, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NroTarjeta, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    Nombre
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-edit"></i></span>
                                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    Apellido
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-edit"></i></span>
                                        @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    Documento
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon">DNI</span>
                                        @Html.EditorFor(model => model.documento, new { htmlAttributes = new { @class = "form-control", @type = "number", @required="required" } })
                                        @Html.ValidationMessageFor(model => model.documento, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    Fecha Nacimiento
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-calendar"></i></span>
                                        @Html.EditorFor(model => model.fecha_nacimiento, new { htmlAttributes = new { @class = "form-control datepicker"} })
                                        @Html.ValidationMessageFor(model => model.fecha_nacimiento, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    Celular
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-mobile"></i></span>
                                        @Html.EditorFor(model => model.celular, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.celular, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    Mail
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon">@@</span>
                                        @Html.EditorFor(model => model.mail, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.mail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    Provincia
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-map-marker"></i></span>
                                        @Html.DropDownListFor(model => model.provincia, ViewBag.ListProvincias as SelectList, "", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.provincia, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    Localidad
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-map-marker"></i></span>
                                        @Html.EditorFor(model => model.localidad, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.localidad, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    Direccion
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-map-marker"></i></span>
                                        @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    Observaciones
                                    <div class="input-prepend input-group">
                                        <span class="add-on input-group-addon"><i class="fa fa-map-marker"></i></span>
                                        @Html.EditorFor(model => model.observaciones, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.observaciones, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                <div class="col-md-12">
                                    <input type="submit" value="Agregar" class="btn btn-success btn-block" />
                                </div>
                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Script {
@Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $.datepicker.regional['es'] = {
                closeText: 'Cerrar',
                prevText: '<Ant',
                nextText: 'Sig>',
                currentText: 'Hoy',
                monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
                dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
                weekHeader: 'Sm',
                dateFormat: 'dd/mm/yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''
            };

            $.datepicker.setDefaults($.datepicker.regional['es']);
            $(".datepicker").datepicker();
        });
    </script>

}